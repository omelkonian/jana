// Run-length encoding using stacks

procedure encode(stack text, stack arc)
    from !empty(text) && empty(arc) do
        local int val = 0
        local int n = 0
        val += top(text)
        from n = 0 do
            local int tmp = 0
            pop(tmp, text)
            delocal int tmp = val
            n += 1
        until empty(text) || top(text) != val
        push(val, arc)
        push(n, arc)
        delocal int n = 0
        delocal int val = 0
    until empty(text)

procedure main()
    stack text  // uncompressed text
    stack arc   // compressed text as (n, char) pairs in reverse order
    int n
    int nn

    from n = 0 do
            n += 1
            local int x = 1
            push(x, text)
            delocal int x = 0
    until n = 320
    call encode(text, arc)
    /*from nn = 0 do
        call encode(text, arc)
        uncall encode(text, arc)
        nn += 1
    until nn = 1000*/
